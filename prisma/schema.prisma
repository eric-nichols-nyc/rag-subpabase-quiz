// This is your Prisma schema file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DocumentType {
  PDF
  TEXT
  URL
  YOUTUBE
}

enum QuizDifficulty {
  EASY
  MEDIUM
  HARD
}

model Document {
  id         String        @id @default(uuid()) @db.Uuid
  title      String
  content    String?
  userId     String        @map("user_id")
  type       DocumentType
  createdAt  DateTime      @default(now()) @map("created_at") @db.Timestamptz
  updatedAt  DateTime      @updatedAt @map("updated_at") @db.Timestamptz
  chunks     DocumentChunk[]
  quizzes    Quiz[]

  @@map("documents")
}

model DocumentChunk {
  id          String   @id @default(uuid()) @db.Uuid
  documentId  String   @map("document_id") @db.Uuid
  content     String
  embedding     Unsupported("vector(1536)")?
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz
  document    Document @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@index([documentId])
  @@map("document_chunks")
  metadata Json?
}

model Quiz {
  id          String         @id @default(uuid()) @db.Uuid
  title       String
  description String?
  userId      String         @map("user_id")
  documentId  String         @map("document_id") @db.Uuid
  difficulty  QuizDifficulty @default(MEDIUM)
  createdAt   DateTime       @default(now()) @map("created_at") @db.Timestamptz
  document    Document       @relation(fields: [documentId], references: [id])
  questions   Question[]

  @@index([userId])
  @@map("quizzes")
}

model Question {
  id            String   @id @default(uuid()) @db.Uuid
  quizId        String   @map("quiz_id") @db.Uuid
  question      String
  options       String[]
  correctAnswer String   @map("correct_answer")
  explanation   String?
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz
  quiz          Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)

  @@index([quizId])
  @@map("questions")
}